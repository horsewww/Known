@inherits BaseComponent
@typeparam TItem where TItem : class, new()

<div class="kui-app-search">
    @if (Search != null)
    {
        @Search
    }
    else
    {
        <Search Placeholder="@Placeholder" ClassicSearchIcon OnSearch="OnSearch" />
    }
</div>
<div class="kui-app-search-result">
    @if (!DataSource.Any())
    {
        <Empty Description="@(EmptyText)" />
    }
    else
    {
        <AntList DataSource="DataSource" NoResult="@EmptyText">
            <ListItem OnClick="()=>OnListItemClick(context)">
                @ChildContent(context)
            </ListItem>
        </AntList>
    }
</div>
<div class="kui-app-search-info">
    <Alert Type="@AlertType.Success" Message="@Total" />
</div>

@code {
    private string Total => Language["Page.Total"].Replace("{total}", $"{DataSource?.Count}");

    [Parameter] public string Placeholder { get; set; }
    [Parameter] public string EmptyText { get; set; }
    [Parameter] public EventCallback<string> OnSearch { get; set; }
    [Parameter] public Action<TItem> OnItemClick { get; set; }
    [Parameter] public List<TItem> DataSource { get; set; }
    [Parameter] public RenderFragment Search { get; set; }
    [Parameter] public RenderFragment<TItem> ChildContent { get; set; }

    private void OnListItemClick(TItem item) => OnItemClick?.Invoke(item);
}