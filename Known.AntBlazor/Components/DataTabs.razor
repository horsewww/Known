@inherits BaseComponent

<Tabs Animated Class="@Class" @bind-ActiveKey="@current">
    <TabBarExtraContentLeft>
        @Model.Left
    </TabBarExtraContentLeft>
    <ChildContent>
        @if (!string.IsNullOrWhiteSpace(Tabs))
        {
            var tabs = Tabs.Split(',');
            foreach (var item in tabs)
            {
                <TabPane Key="@item" Tab="@item" />
            }
        }
        else if (Model != null && Model.HasItem)
        {
            foreach (var item in Model.Items)
            {
                if (item.Content != null)
                {
                    <TabPane Key="@item.Id" Tab="@Language?.GetTitle(item.Title)">
                        @item.Content
                    </TabPane>
                }
                else
                {
                    <TabPane Key="@item.Id" Tab="@Language?.GetTitle(item.Title)" />
                }
            }
        }
    </ChildContent>
    <TabBarExtraContentRight>
        @Model.Right
    </TabBarExtraContentRight>
</Tabs>

@code {
    private string current;

    [Parameter] public string Class { get; set; }
    [Parameter] public string Tabs { get; set; }
    [Parameter] public TabModel Model { get; set; }
    [Parameter] public Action<string> OnChange { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (current != Model.Current)
        {
            Model.Current = current;
            OnChange?.Invoke(current);
            Model.Change();
        }
    }
}