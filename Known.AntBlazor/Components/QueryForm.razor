@inherits BaseComponent
@typeparam TItem where TItem : class, new()

<div class="ant-query">
@if (Model.QueryColumns != null && Model.QueryColumns.Count > 0)
{
    var length = Model.QueryColumns.Count;
    if (length > 3)
        length = _expand ? length : 3;
    <Form @ref="_form" Model="Model.QueryData" Layout="@FormLayout.Inline">
        @for (var i = 0; i < length; i++)
        {
            var item = Model.QueryColumns[i];
            var itemName = Context.Language[item.Id];
            var itemType = "String";
            if (item.Property != null)
                itemType = item.Property.PropertyType.ToString();
            <FormItem Label="@itemName">
                @if (!string.IsNullOrWhiteSpace(item.Category))
                {
                    var codes = Cache.GetCodes(item.Category).ToCodes(item.IsQueryAll ? Context.Language["All"] : "");
                    <AntSelect Style="width:150px;" Codes="codes" @bind-Value="@(context[item.Id].Value)" OnSelectedItemChanged="e=>OnSearchAsync()" />
                }
                else if (itemType.Contains("DateTime"))
                {
                    <RangePicker TValue="DateTime?[]" OnChange="e=>OnDateRangeChange(e,context[item.Id])" />
                }
                else
                {
                    <Input Style="width:150px;" @bind-Value="@(context[item.Id].Value)" />
                }
            </FormItem>
        }
        <div class="ant-query-btn">
            <Button Type="primary" Icon="search" OnClick="e=>OnSearchAsync()">@Context.Language.Search</Button>
            <Button Icon="undo" OnClick="()=>{_form?.Reset();}">@Context.Language.Reset</Button>
            @if (Model.QueryColumns.Count > 3)
            {
                <a style="margin-left:8px;font-size:12px;" @onclick="()=>{_expand=!_expand;}">
                        <Icon Type="@(_expand ? "up" : "down")"></Icon> @(_expand ? Context.Language["Collapse"] : Context.Language["Expand"])
                </a>
            }
        </div>
    </Form>
}
</div>

@code {
    bool _expand = false;
    AntDesign.Internal.IForm _form;

    [Parameter] public TableModel<TItem> Model { get; set; }

    private async Task OnSearchAsync()
    {
        Model.Criteria.IsQuery = true;
        Model.Criteria.Query = Model.QueryData.Select(d => d.Value).ToList();
        await Model.RefreshAsync();
    }

    private void OnDateRangeChange(DateRangeChangedEventArgs<DateTime?[]> e, QueryInfo query)
    {
        query.Value = $"{e.Dates[0]:yyyy-MM-dd}~{e.Dates[1]:yyyy-MM-dd}";
    }
}