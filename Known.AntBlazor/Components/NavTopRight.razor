@inherits BaseComponent

<Space Size="@("24")">
    <SpaceItem>
        <Tooltip Title="@Language["Nav.HomePage"]"><Icon Type="home" OnClick="@(e=>OnItemClick("home"))" /></Tooltip>
    </SpaceItem>
    <SpaceItem>
        <Tooltip Title="@FullScreenTitle"><Icon Type="@FullScreenIcon" OnClick="OnFullScreen" /></Tooltip>
    </SpaceItem>
    <SpaceItem Style="width:40px;text-align:center;">
        <AntLanguage OnChanged="OnLanguageChanged" />
    </SpaceItem>
    <SpaceItem>
        <AntDropdown Context="Context" Text="@CurrentUser.Name" Items="UserItems" OnItemClick="e=>OnItemClick(e.Id)" />
    </SpaceItem>
    <SpaceItem>
        <AntTheme Theme="@Index.Theme" OnChanged="Index.SetTheme" />
    </SpaceItem>
    <SpaceItem>
        <Tooltip Title="@Language["Nav.Setting"]"><Icon Type="setting" OnClick="@(e=>showSetting=true)" /></Tooltip>
    </SpaceItem>
</Space>

<Drawer Closable="true" @bind-Visible="showSetting" Placement="right" Title='(Language["Nav.Setting"])' Width="300">
    <Known.Blazor.SettingForm @ref="setting" />
</Drawer>

@code {
    private Known.Blazor.SettingForm setting;
    private bool showSetting = false;
    private bool isFullScreen = false;
    private string FullScreenTitle => isFullScreen ? Language["Nav.ExitScreen"] : Language["Nav.FullScreen"];
    private string FullScreenIcon => isFullScreen ? "fullscreen-exit" : "fullscreen";
    private List<ActionInfo> UserItems => [
        new ActionInfo { Id = "profile", Name = Language["Nav.Profile"], Icon = "user" },
        new ActionInfo { Id = "logout", Name = Language["Nav.Exit"], Icon = "poweroff" }
    ];

    [CascadingParameter] private IndexPage Index { get; set; }

    [Parameter] public Action<string> OnMenuClick { get; set; }

    private void OnItemClick(string id) => OnMenuClick?.Invoke(id);

    private async void OnFullScreen()
    {
        isFullScreen = !isFullScreen;
        if (isFullScreen)
            await JS.OpenFullScreenAsync();
        else
            await JS.CloseFullScreenAsync();
    }

    private void OnLanguageChanged()
    {
        setting?.StateChanged();
        Context.RefreshPage();
    }
}