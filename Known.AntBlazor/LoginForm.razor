@inherits BaseComponent

<Form Model="@Model" OnFinish="OnUserLogin" LabelCol="null" ValidateOnChange>
    <FormItem Label="">
        <Input @bind-Value="@context.UserName" Placeholder="用户名">
            <Prefix><Icon Type="user" /></Prefix>
        </Input>
    </FormItem>
    <FormItem Label="">
        <InputPassword @bind-Value="@context.Password" Placeholder="密码">
            <Prefix><Icon Type="lock" /></Prefix>
        </InputPassword>
    </FormItem>
    <FormItem Label="">
        <AntCaptcha @ref="captcha" @bind-Value="@context.Captcha" Placeholder="验证码" Option="option">
            <Prefix><Icon Type="check" /></Prefix>
        </AntCaptcha>
    </FormItem>
    <FormItem>
        <Switch @bind-Checked="@context.Remember" /> 记住用户名
    </FormItem>
    <FormItem>
        <Button Type="@ButtonType.Primary" HtmlType="submit" Block>登 录</Button>
    </FormItem>
</Form>

@code {
    private AntCaptcha captcha;
    private CaptchaOption option = new CaptchaOption { SMSCount = 60 };

    [Parameter] public LoginFormInfo Model { get; set; }
    [Parameter] public EventCallback<EditContext> OnLogin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        option.SMSAction = () =>
        {
            var result = Known.Result.Success($"发送{Model.UserName}");
            return Task.FromResult(result);
        };
    }

    private async void OnUserLogin()
    {
        if (!captcha.Validate(out string message))
        {
            UI.Toast(message, StyleType.Error);
            return;
        }

        await OnLogin.InvokeAsync();
    }
}