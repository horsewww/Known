@inherits BaseComponent

<Tabs Animated>
    <TabPane Key="1" Tab="@Context.Language["Login.WithAccount"]">
        <Form Model="Model" OnFinish="OnUserLogin" LabelCol="null" ValidateOnChange ValidateMode="@FormValidateMode.Rules">
            <FormItem Label="" Required Rules="@Context.RuleRequired("UserName")">
                <Input @bind-Value="@context.UserName" Placeholder="@Context.Language["UserName"]">
                    <Prefix><Icon Type="user" /></Prefix>
                </Input>
            </FormItem>
            <FormItem Label="" Required Rules="@Context.RuleRequired("Password")">
                <InputPassword @bind-Value="@context.Password" Placeholder="@Context.Language["Password"]">
                    <Prefix><Icon Type="lock" /></Prefix>
                </InputPassword>
            </FormItem>
            <FormItem Label="" Required Rules="@Context.RuleRequired("Captcha")">
                <AntCaptcha @ref="userCaptcha" @bind-Value="@context.Captcha" Placeholder="@Context.Language["Captcha"]">
                    <Prefix><Icon Type="check" /></Prefix>
                </AntCaptcha>
            </FormItem>
            <FormItem>
                <Switch @bind-Checked="@context.Remember" /> @Context.Language["Login.RememberUser"]
            </FormItem>
            <FormItem>
                <Button Type="@ButtonType.Primary" HtmlType="submit" Block>@Context.Language["Login"]</Button>
            </FormItem>
        </Form>
    </TabPane>
    <TabPane Key="2" Tab="@Context.Language["Login.WithPhone"]">
        <Form @ref="form" Model="phone" OnFinish="OnPhoneLogin" LabelCol="null" ValidateOnChange ValidateMode="@FormValidateMode.Rules">
            <FormItem Label="" Required Rules="@Context.RuleRequired("PhoneNo")">
                <Input @bind-Value="@context.PhoneNo" Placeholder="@Context.Language["PhoneNo"]">
                    <Prefix><Icon Type="phone" /></Prefix>
                </Input>
            </FormItem>
            <FormItem Label="" Required>
                <AntCaptcha @bind-Value="@context.PhoneCode" Placeholder="@Context.Language["PhoneCode"]" Option="option">
                    <Prefix><Icon Type="lock" /></Prefix>
                </AntCaptcha>
            </FormItem>
            <FormItem Label="" Required Rules="@Context.RuleRequired("Captcha")">
                <AntCaptcha @ref="phoneCaptcha" @bind-Value="@context.Captcha" Placeholder="@Context.Language["Captcha"]">
                    <Prefix><Icon Type="check" /></Prefix>
                </AntCaptcha>
            </FormItem>
            <FormItem>
                <Switch @bind-Checked="@context.Remember" /> @Context.Language["Login.RememberPhone"]
            </FormItem>
            <FormItem>
                <Button Type="@ButtonType.Primary" HtmlType="submit" Block>@Context.Language["Login"]</Button>
            </FormItem>
        </Form>
    </TabPane>
</Tabs>

@code {
    private AntDesign.Internal.IForm form;
    private AntCaptcha userCaptcha;
    private AntCaptcha phoneCaptcha;
    private LoginPhoneInfo phone = new();
    private CaptchaOption option = new CaptchaOption { SMSCount = 60 };

    [Parameter] public LoginFormInfo Model { get; set; }
    [Parameter] public EventCallback<EditContext> OnLogin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        option.SMSAction = () =>
        {
            if (!form.Validate())
                return Known.Result.ErrorAsync("");

            if (!phoneCaptcha.Validate(out string message))
                return Known.Result.ErrorAsync(message);

            return Known.Result.SuccessAsync("Test Successful!");
        };
    }

    private async void OnUserLogin()
    {
        if (!userCaptcha.Validate(out string message))
        {
            UI.Toast(message, StyleType.Error);
            return;
        }

        await OnLogin.InvokeAsync();
    }

    private void OnPhoneLogin() { }
}