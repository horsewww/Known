@inherits AdminPage

<Layout SideWidth="0" IsFullSide ShowFooter ShowCollapseBar MenuBarIcon="fa fa-bars">
    <Header>
        <div class="kui-header">
            <div class="kui-app-name">@CurrentUser?.AppName</div>
            <NavTopRight OnMenuClick="OnMenuClick" />
        </div>
    </Header>
    <Side>
        <div class="boot-banner">
            <div class="kui-logo" />
        </div>
        <Menu DisableNavigation IsVertical IsAccordion Items="SideMenuItems" OnClick="OnSideMenuClick" />
    </Side>
    <Main>
        @if (Context.UserSetting.MultiTab)
        {
            <PageTabs @ref="tabs" Menu="CurrentMenu" Items="TabMenus" />
        }
        else
        {
            <PageSingle @ref="page" Menu="CurrentMenu" OnHome="OnHome" />
        }
    </Main>
    <Footer>
        @if (BootConfig.Option.Footer != null)
        {
            <div style="text-align:center">@BootConfig.Option.Footer</div>
        }
        else
        {
            <div style="text-align:center"><PageFooter /></div>
        }
    </Footer>
</Layout>

@code{
    private PageTabs tabs;
    private PageSingle page;
    private List<BootstrapBlazor.Components.MenuItem> SideMenuItems = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        SideMenuItems = UserMenus.ToSideMenuItems(Context);
    }

    protected override void RefreshPage()
    {
        base.RefreshPage();
        tabs?.StateChanged();
        page?.StateChanged();
    }

    private void OnHome() => OnMenuClick("home");

    private void OnMenuClick(string id)
    {
        switch (id)
        {
            case "home":
                Context.NavigateToHome();
                break;
            case "profile":
                Context.NavigateToUserProfile();
                break;
            case "logout":
                UI.Confirm(Language["Tip.Exits"], SignOutAsync);
                break;
        }
    }

    private Task OnSideMenuClick(BootstrapBlazor.Components.MenuItem item)
    {
        foreach (var menu in UserMenus)
        {
            foreach (var sub in menu.Children)
            {
                if (item.Id == sub.Id)
                {
                    Context.Navigate(sub);
                    break;
                }
            }
        }
        return Task.CompletedTask;
    }
}