@typeparam TItem where TItem : class, new()

<ValidateForm @ref="_form" Model="Model.Data" class="boot-form">
    @if (rows != null && rows.Count > 0)
    {
        foreach (var row in rows)
        {
            var col = 12 / row.Fields.Count;
            var colSpan = $"boot-col col-{col}";
            <div class="boot-row row">
                @foreach (var field in row.Fields)
                {
                    <div class="@colSpan">
                        @* <label>@field.Column.Name</label> *@
                        @field.InputTemplate
                    </div>
                }
            </div>
        }
    }
</ValidateForm>

@code {
    private ValidateForm _form;
    private List<FormRow<TItem>> rows;

    [Parameter] public FormModel<TItem> Model { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model.Initialize();
        rows = Model.Rows;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            Model.OnValidate = _form.Validate;
        base.OnAfterRender(firstRender);
    }
}